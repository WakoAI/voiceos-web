/**
 * VoiceOS
 * VoiceOS API
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { WakoApiModelsLanguageModelProvider } from '../models/WakoApiModelsLanguageModelProvider';
import { HttpFile } from '../http/http';

export class LanguageModelCost {
    /**
    * The provider of the language model.
    */
    'provider': WakoApiModelsLanguageModelProvider;
    /**
    * The cost for the language model usage. Returns zero, if the provider account you provided was used.
    */
    'cost': number;
    /**
    * The number of input tokens used for the language model.
    */
    'inputTokens': number;
    /**
    * The number of output tokens used for the language model.
    */
    'outputTokens': number;
    /**
    * Whether the provider account you provided was used. If true, the cost will be zero.
    */
    'external': boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "provider",
            "baseName": "provider",
            "type": "WakoApiModelsLanguageModelProvider",
            "format": ""
        },
        {
            "name": "cost",
            "baseName": "cost",
            "type": "number",
            "format": ""
        },
        {
            "name": "inputTokens",
            "baseName": "input_tokens",
            "type": "number",
            "format": ""
        },
        {
            "name": "outputTokens",
            "baseName": "output_tokens",
            "type": "number",
            "format": ""
        },
        {
            "name": "external",
            "baseName": "external",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LanguageModelCost.attributeTypeMap;
    }

    public constructor() {
    }
}



