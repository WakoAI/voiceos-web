/**
 * VoiceOS
 * VoiceOS API
 *
 * OpenAPI spec version: 0.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AgentConfiguration } from '../models/AgentConfiguration';
import { ConversationCost } from '../models/ConversationCost';
import { ConversationStatus } from '../models/ConversationStatus';
import { ConversationType } from '../models/ConversationType';
import { EndedReasons } from '../models/EndedReasons';
import { Message } from '../models/Message';
import { TwilioPhoneCall } from '../models/TwilioPhoneCall';
import { HttpFile } from '../http/http';

export class ConversationResponse {
    /**
    * The uri of the conversation.
    */
    'uri': string;
    /**
    * The type of conversation.
    */
    'type': ConversationType;
    /**
    * The account id associated with of the conversation.
    */
    'accountId': string;
    /**
    * The status of the conversation.
    */
    'status': ConversationStatus;
    /**
    * The start time of the conversation.
    */
    'startedAt'?: Date;
    /**
    * The end time of the conversation. Returns null if the conversation is has not ended.
    */
    'endedAt'?: Date;
    /**
    * The agent configuration used for the conversation.
    */
    'agentConfig': AgentConfiguration;
    /**
    * The id of the agent used in the conversation. Returns null if the conversation did not use an existing agent.
    */
    'agentId'?: string;
    /**
    * The messages of the conversation.
    */
    'messages'?: Array<Message>;
    /**
    * The phone call details of the conversation. Returns null if the conversation was over web.
    */
    'phoneCall'?: TwilioPhoneCall;
    /**
    * The reasons the conversation ended.
    */
    'endedReason'?: EndedReasons;
    /**
    * The cost breakdown of the conversation.
    */
    'costBreakdown'?: ConversationCost;
    /**
    * The id of the conversation.
    */
    'id': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "uri",
            "baseName": "uri",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ConversationType",
            "format": ""
        },
        {
            "name": "accountId",
            "baseName": "account_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ConversationStatus",
            "format": ""
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "endedAt",
            "baseName": "ended_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "agentConfig",
            "baseName": "agent_config",
            "type": "AgentConfiguration",
            "format": ""
        },
        {
            "name": "agentId",
            "baseName": "agent_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "messages",
            "baseName": "messages",
            "type": "Array<Message>",
            "format": ""
        },
        {
            "name": "phoneCall",
            "baseName": "phone_call",
            "type": "TwilioPhoneCall",
            "format": ""
        },
        {
            "name": "endedReason",
            "baseName": "ended_reason",
            "type": "EndedReasons",
            "format": ""
        },
        {
            "name": "costBreakdown",
            "baseName": "cost_breakdown",
            "type": "ConversationCost",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ConversationResponse.attributeTypeMap;
    }

    public constructor() {
    }
}



